server:
  port: ${OSM_QUALITY_FRAMEWORK_LISTEN_PORT:8080}

spring:
  application:
    name: openstreetmap-quality-framework

  datasource:
    url: jdbc:postgresql://${OSM_QUALITY_FRAMEWORK_DATABASE_HOST}:${OSM_QUALITY_FRAMEWORK_DATABASE_PORT}/${OSM_QUALITY_FRAMEWORK_DATABASE}
    username: ${OSM_QUALITY_FRAMEWORK_DATABASE_USERNAME}
    password: ${OSM_QUALITY_FRAMEWORK_DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-init-sql: CREATE SCHEMA IF NOT EXISTS openstreetmap_schema;

  cache:
    cache-names: "cacheObjectTypeInfo"
    caffeine:
      spec: "maximumSize=100,expireAfterAccess=1d"

  jpa:
#    show-sql: true
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update

  sql:
    init:
      mode: always
      data-locations:
        - classpath:sql/openstreetmap_schema/aaa-basis-schema.sql
        - classpath:sql/openstreetmap_schema/atkis-basis-dlm-schema.sql
        - classpath:sql/openstreetmap_schema/openstreetmap-quality-framework-schema.sql
        - classpath:sql/openstreetmap_schema/rules/**/*.sql

  http:
    codecs:
      max-in-memory-size: 1GB

quality:
  pipeline:
    steps:
      - id: "attribute-check"
        waitsFor: []

      - id: "geometry-check"
        waitsFor: []

openstreetmap-tools:
  osm2pgsql: ${OSM2PGSQL_EXECUTABLE}
  osmosis: ${OSMOSIS_EXECUTABLE}

openstreetmap-api: ${OSM_API_URL:https://api.openstreetmap.org/}